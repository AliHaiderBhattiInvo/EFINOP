{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp2Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp2Form.vue","mtime":1652638352000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgYXBpIGZyb20gJy4uLy4uLy4uLy4uL1V0aWxzL2FwaScKaW1wb3J0IHsgZmluZGFzaCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbmZpZy9wbHVnaW5Jbml0JwppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IFZ1ZUxvYWRpbmdCdXR0b24gZnJvbSAidnVlLWxvYWRpbmctYnV0dG9uIjsKaW1wb3J0IHZ1ZUF3ZXNvbWVDb3VudGRvd24gZnJvbSAndnVlLWF3ZXNvbWUtY291bnRkb3duJzsKClZ1ZS51c2UodnVlQXdlc29tZUNvdW50ZG93biwgJ3ZhYycpCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ090cDFGb3JtJywKICBwcm9wczogWydmb3JtVHlwZSddLAogIG1vdW50ZWQgKCkgewogICAgZmluZGFzaC5pbmRleCgpCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyh7CiAgICAgIHVzZXJzOiAnU2V0dGluZy91c2Vyc1N0YXRlJwogICAgfSkKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUxvYWRpbmdCdXR0b24KICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgZm9ybURhdGE6IHsKICAgICAgb3RwOiAnJywKICAgICAgaXNfcGhvbmVfbnVtYmVyOiB0cnVlCiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgYXN5bmMgb25TdWJtaXQgKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGNvbnN0IHVzZXJzU3RhdGUgPSAodGhpcy4kc3RvcmUuZ2V0dGVyc1snU2V0dGluZy91c2Vyc1N0YXRlJ10gJiYgdGhpcy4kc3RvcmUuZ2V0dGVyc1snU2V0dGluZy91c2Vyc1N0YXRlJ10ubGVuZ3RoID4gMCAmJiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydTZXR0aW5nL3VzZXJzU3RhdGUnXVt0aGlzLiRzdG9yZS5nZXR0ZXJzWydTZXR0aW5nL3VzZXJzU3RhdGUnXS5sZW5ndGggLTFdKSB8fCB7fQogICAgICBhcGkucG9zdCgndmVyaWZ5LW90cCcsIHsgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5mb3JtRGF0YSwgeyB1c2VyX2lkOiAodXNlcnNTdGF0ZSAmJiB1c2Vyc1N0YXRlLnVzZXJfaWQpIHx8ICcnIH0pIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICBmaW5kYXNoLnNob3dTbmFja2Jhcignc3VjY2VzcycsIHJlcy5kYXRhICYmIHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgICAgaWYodXNlcnNTdGF0ZSAmJiB1c2Vyc1N0YXRlLnJlZGlyZWN0KXsKICAgICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKGAvc2lnbi1pbjFgKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZShgL2F1dGgvc2lnbi11cDNgKQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIGNvbnN0IEVyciA9IChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvci5tZXNzYWdlKSB8fCAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpIHx8ICdJbnZhbGlkIE9UUCBDb2RlLic7CiAgICAgICAgZmluZGFzaC5zaG93U25hY2tiYXIoJ2Vycm9yJywgRXJyKQogICAgICB9KS5maW5hbGx5KCgpID0+IHsKICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICB9LAogICAgYXN5bmMgaGFuZGxlUmVzZW5kT1RQICgpIHsKICAgICAgY29uc3QgdXNlcnNTdGF0ZSA9ICh0aGlzLiRzdG9yZS5nZXR0ZXJzWydTZXR0aW5nL3VzZXJzU3RhdGUnXSAmJiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydTZXR0aW5nL3VzZXJzU3RhdGUnXS5sZW5ndGggPiAwICYmIHRoaXMuJHN0b3JlLmdldHRlcnNbJ1NldHRpbmcvdXNlcnNTdGF0ZSddW3RoaXMuJHN0b3JlLmdldHRlcnNbJ1NldHRpbmcvdXNlcnNTdGF0ZSddLmxlbmd0aCAtMV0pIHx8IHt9CiAgICAgIGFwaS5wb3N0KCdyZXNlbmQtTW9iaWxlLW90cCcsIHsgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgeyB1c2VyX2lkOiAodXNlcnNTdGF0ZSAmJiB1c2Vyc1N0YXRlLnVzZXJfaWQpIHx8ICcnIH0pIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICBmaW5kYXNoLnNob3dTbmFja2Jhcignc3VjY2VzcycsIHJlcy5kYXRhICYmIHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBjb25zdCBFcnIgPSAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yKSB8fCAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpIHx8ICdJbnZhbGlkIE9UUCBDb2RlLic7CiAgICAgICAgZmluZGFzaC5zaG93U25hY2tiYXIoJ2Vycm9yJywgRXJyKQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["SignUp2Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignUp2Form.vue","sourceRoot":"src/views/AuthPages/Default/Forms","sourcesContent":["<template>\n  <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit, invalid }\">\n    <form class=\"mt-4\" novalidate @submit.prevent=\"handleSubmit(onSubmit)\">\n      <ValidationProvider vid=\"otp\" name=\"OTP\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <label for=\"otp\">OTP</label>\n          <input type=\"text\" v-model=\"formData.otp\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"otp\" placeholder=\"Mobile OTP\">\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n      <div class=\"d-inline-block w-100\" style=\"display:flex !important;justify-content:center;align-items:center\">\n        <VueLoadingButton\n          class=\"btn btn-primary loading-btn\"\n          aria-label=\"Post message\"\n          @click.native=\"onSubmit\"\n          :disabled=\"invalid\"\n          :loading=\"isLoading\"\n          styled\n        >Submit</VueLoadingButton>\n        <div style=\"color: black;margin-left:10px\">\n          <vac :end-time=\"new Date().getTime() + 20000\">\n            <span\n              slot=\"process\"\n              slot-scope=\"{ timeObj }\">{{ `${timeObj.m}:${timeObj.s}` }}</span>\n            <span class=\"resend-otp-span\" slot=\"finish\" @click=\"handleResendOTP\">Resend OTP</span>\n          </vac>\n        </div>\n      </div>\n      <div class=\"sign-info\" style=\"display:flex;justify-content:center;color:black\">\n          <span class=\"dark-color d-inline-block line-height-2\">\n            Already Have Account ?\n              <router-link to=\"/dark/sign-in1\" class=\"iq-waves-effect pr-4\" v-if=\"$route.meta.dark\">\n                Sign in\n              </router-link>\n            <router-link to=\"/sign-in1\" class=\"iq-waves-effect pr-4\" v-else>\n                Sign in\n              </router-link>\n          </span>\n      </div>\n    </form>\n  </ValidationObserver>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport api from '../../../../Utils/api'\nimport { findash } from '../../../../config/pluginInit'\nimport Vue from 'vue'\nimport VueLoadingButton from \"vue-loading-button\";\nimport vueAwesomeCountdown from 'vue-awesome-countdown';\n\nVue.use(vueAwesomeCountdown, 'vac')\n\nexport default {\n  name: 'Otp1Form',\n  props: ['formType'],\n  mounted () {\n    findash.index()\n  },\n  computed: {\n    ...mapGetters({\n      users: 'Setting/usersState'\n    })\n  },\n  components: {\n    VueLoadingButton\n  },\n  data: () => ({\n    isLoading: false,\n    formData: {\n      otp: '',\n      is_phone_number: true\n    }\n  }),\n  methods: {\n    async onSubmit () {\n      this.isLoading = true;\n      const usersState = (this.$store.getters['Setting/usersState'] && this.$store.getters['Setting/usersState'].length > 0 && this.$store.getters['Setting/usersState'][this.$store.getters['Setting/usersState'].length -1]) || {}\n      api.post('verify-otp', { data: Object.assign({}, this.formData, { user_id: (usersState && usersState.user_id) || '' }) }).then(res => {\n        findash.showSnackbar('success', res.data && res.data.message)\n        if(usersState && usersState.redirect){\n          this.$router.replace(`/sign-in1`)\n        } else {\n          this.$router.replace(`/auth/sign-up3`)\n        }\n      }).catch(error => {\n        const Err = (error.response && error.response.data && error.response.data.error && error.response.data.error.message) || (error.response && error.response.data && error.response.data.message) || 'Invalid OTP Code.';\n        findash.showSnackbar('error', Err)\n      }).finally(() => {\n        this.isLoading = false\n      })\n    },\n    async handleResendOTP () {\n      const usersState = (this.$store.getters['Setting/usersState'] && this.$store.getters['Setting/usersState'].length > 0 && this.$store.getters['Setting/usersState'][this.$store.getters['Setting/usersState'].length -1]) || {}\n      api.post('resend-Mobile-otp', { data: Object.assign({}, { user_id: (usersState && usersState.user_id) || '' }) }).then(res => {\n        findash.showSnackbar('success', res.data && res.data.message)\n      }).catch(error => {\n        const Err = (error.response && error.response.data && error.response.data.error) || (error.response && error.response.data && error.response.data.message) || 'Invalid OTP Code.';\n        findash.showSnackbar('error', Err)\n      })\n    }\n  }\n}\n</script>\n<style>\n.loading-btn {\n  background: var(--iq-primary) !important;\n    border-color: var(--iq-primary) !important;\n    padding: 6px 12px 6px 12px !important;\n}\n\n.resend-otp-span {\n    color: #1e3d73;\n    text-decoration: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n</style>\n"]}]}