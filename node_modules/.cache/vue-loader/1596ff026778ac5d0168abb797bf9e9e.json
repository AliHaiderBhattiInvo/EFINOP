{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue?vue&type=style&index=0&id=140927ed&scoped=true&lang=css&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue","mtime":1653396920000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgd2lkdGg6IDEwMCU7Cn0KLmhlYWRlciBidXR0b246Zmlyc3QtY2hpbGQsCi5oZWFkZXIgYnV0dG9uOm50aC1jaGlsZCgyKSB7CiAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogIGJhY2tncm91bmQtY29sb3I6ICMxZjNkNzM7CiAgYm9yZGVyOiBub25lOwp9CgouaGVhZGVyIGJ1dHRvbjpudGgtY2hpbGQoMykgewogIGJhY2tncm91bmQtY29sb3I6ICMxZjNkNzM7CiAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogIGJvcmRlcjogbm9uZTsKfQoKLmhlYWRlciBidXR0b246bnRoLWNoaWxkKDQpIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYzZDczOwogIGJvcmRlcjogbm9uZTsKfQoKLmVkaXQtYnRuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYzZDczICFpbXBvcnRhbnQ7CiAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogIGJvcmRlcjogbm9uZTsKfQoKLmRlbC1idG4gewogIGJhY2tncm91bmQtY29sb3I6ICNjNjEyMTIgIWltcG9ydGFudDsKICBib3JkZXI6IG5vbmU7Cn0KCi5lZGl0LWJ0biBpLAouZGVsLWJ0biBpIHsKICBtYXJnaW46IDBweCAhaW1wb3J0YW50Owp9CgoucGFnaW5hdGlvbiB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQouY29hLXJldmlldy1zdWNjZXNzIHsKICBjb2xvcjogZ3JlZW47CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgZm9udC1zaXplOiAyMnB4OwogIG1hcmdpbi1sZWZ0OiA4cHg7Cn0KLnNlYXJjaCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93Owp9Cgouc2VhcmNoIGlucHV0IHsKICB3aWR0aDogMjQlOwogIG1hcmdpbi1yaWdodDogMTVweDsKfQoKLnNlYXJjaCBidXR0b24gewogIG1hcmdpbi1yaWdodDogMTVweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingskpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/UploadCOA","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div>\n      <!-- Page Header Starts -->\n      <div class=\"header\">\n        <div>\n          <b-breadcrumb :items=\"breadcrumb\" style=\"margin: 0px\" />\n        </div>\n        <div>\n          <div>\n            <b-button v-b-modal.reportDetails-form>Create COA</b-button>\n            <b-button @click=\"onClickUpload\">Upload COA</b-button>\n            <b-button @click=\"handleClone\">Clone COA</b-button>\n            <b-button v-if=\"role === 'MIDDLE'\" @click=\"handleReview\"\n              >Send for Review</b-button\n            >\n            <b-button v-if=\"role === 'ADMIN'\" @click=\"handleReview\"\n              >Push to Final</b-button\n            >\n          </div>\n        </div>\n      </div>\n      <!-- Page Header Ends -->\n      <!-- Table List Starts -->\n      <b-table\n        id=\"reportDetails-table\"\n        class=\"reportDetails-table\"\n        striped\n        hover\n        :items=\"records\"\n        :busy=\"loading\"\n        :fields=\"fields\"\n        show-empty\n      >\n        <template #cell(focus_setting)=\"data\">\n          <div\n            v-if=\"\n              data &&\n              data.item &&\n              data.item.focus_setting &&\n              data.item.focus_setting.focus_id\n            \"\n          >\n            <div style=\"display: flex; align-items: center\">\n              {{\n                (data &&\n                  data.item &&\n                  data.item.focus_setting &&\n                  data.item.focus_setting.focus_id) ||\n                \"\"\n              }}\n              <i class=\"las la-check-circle coa-review-success\"></i>\n            </div>\n            <b-badge\n              class=\"border border-danger text-danger mr-1\"\n              variant=\"none\"\n              @click=\"unmapSettings('focus', data && data.item && data.item.id)\"\n            >\n              <i class=\"las la-times\" style=\"cursor: pointer\"> Remove </i>\n            </b-badge>\n          </div>\n          <div v-if=\"data && data.item && !data.item.focus_setting\">\n            <b-badge\n              @click=\"\n                openSettingsModal('focus', data && data.item && data.item.id)\n              \"\n              class=\"border border-primary text-primary mr-1\"\n              variant=\"none\"\n              ><i class=\"las la-plus\" style=\"font-size: 14px; cursor: pointer\">\n                Select Focus ID\n              </i></b-badge\n            >\n          </div>\n        </template>\n        <template #cell(ssoi_setting)=\"data\">\n          <div\n            v-if=\"\n              data &&\n              data.item &&\n              data.item.ssoi_setting &&\n              data.item.ssoi_setting.ssoi_id\n            \"\n          >\n            <div style=\"display: flex; align-items: center\">\n              {{\n                (data &&\n                  data.item &&\n                  data.item.ssoi_setting &&\n                  data.item.ssoi_setting.ssoi_id) ||\n                \"\"\n              }}\n              <i class=\"las la-check-circle coa-review-success\"></i>\n            </div>\n            <b-badge\n              class=\"border border-danger text-danger mr-1\"\n              variant=\"none\"\n              @click=\"unmapSettings('ssoi', data && data.item && data.item.id)\"\n            >\n              <i class=\"las la-times\" style=\"cursor: pointer\"> Remove </i>\n            </b-badge>\n          </div>\n          <div v-if=\"data && data.item && !data.item.ssoi_setting\">\n            <b-badge\n              @click=\"\n                openSettingsModal('ssoi', data && data.item && data.item.id)\n              \"\n              class=\"border border-primary text-primary mr-1\"\n              variant=\"none\"\n              ><i class=\"las la-plus\" style=\"font-size: 14px; cursor: pointer\">\n                Select SSOI ID\n              </i></b-badge\n            >\n          </div>\n        </template>\n        <template #cell(allowable)=\"data\">\n          <div>\n            {{\n              data && data.item && data.item.allowable\n                ? \"Allowable\"\n                : data && data.item && data.item.allowable === false\n                ? \"Non Allowable\"\n                : \"\"\n            }}\n          </div>\n        </template>\n        <template #cell(action)=\"data\">\n          <b-button\n            class=\"edit-btn\"\n            @click=\"onClickEdit((data && data.item) || {})\"\n          >\n            <i class=\"ri-pencil-line\" />\n          </b-button>\n          <b-button\n            class=\"del-btn\"\n            @click=\"onDelete(data && data.item && data.item.id)\"\n          >\n            <i class=\"ri-delete-bin-7-line\" />\n          </b-button>\n        </template>\n        <template #table-busy>\n          <div class=\"text-center my-2\" style=\"color: #1f3d73\">\n            <b-spinner\n              class=\"align-middle\"\n              style=\"margin-right: 10px\"\n            ></b-spinner>\n            <strong>Please Wait...</strong>\n          </div>\n        </template>\n        <template #empty>\n          <h5>No Records Found.</h5>\n        </template>\n      </b-table>\n      <!-- Table List Ends -->\n      <!-- Table Pagination Starts -->\n      <div class=\"pagination\">\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"rows\"\n          :per-page=\"perPage\"\n          @change=\"handlePagination\"\n          aria-controls=\"reportDetails-table\"\n        ></b-pagination>\n      </div>\n      <!-- Table Pagination Ends -->\n      <!-- Modal Form Starts -->\n      <b-modal\n        id=\"reportDetails-form\"\n        ref=\"modal\"\n        :title=\"formType ? `${formType} COA` : 'Create COA'\"\n        v-model=\"showModal\"\n        @hidden=\"resetModal\"\n        @ok=\"handleSubmit\"\n      >\n        <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n          <div v-for=\"item in columns\" :key=\"item.id\">\n            <b-form-group\n              v-if=\"item.type === 'text'\"\n              :label=\"item.label\"\n              :label-for=\"item.key\"\n            >\n              <b-form-input\n                :name=\"item.key\"\n                :id=\"item.key\"\n                v-model=\"form[item.key]\"\n                :required=\"item.required\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-checkbox\n              v-if=\"item.type === 'checkbox'\"\n              :id=\"item.key\"\n              v-model=\"form[item.key]\"\n              :name=\"item.key\"\n            >\n              {{ item.label }}\n            </b-form-checkbox>\n            <b-form-file\n              v-if=\"item.type === 'file'\"\n              v-model=\"form[item.key]\"\n              placeholder=\"Choose a file or drop it here...\"\n              drop-placeholder=\"Drop file here...\"\n            ></b-form-file>\n          </div>\n        </form>\n        <template #modal-ok>Submit</template>\n      </b-modal>\n      <!-- Modal Form Ends -->\n      <!-- Modal Settings List Starts -->\n      <b-modal\n        id=\"settings-list-modal\"\n        ref=\"settings-modal\"\n        size=\"xl\"\n        title=\"Please select the row\"\n        v-model=\"settings.showModal\"\n        @show=\"getSettingsList(settings.type)\"\n        @hidden=\"resetModal\"\n        :ok-disabled=\"true\"\n      >\n        <div>\n          <div class=\"search\">\n            <b-form-input\n              name=\"search_key\"\n              id=\"search_key\"\n              v-model=\"settings.search_key\"\n              placeholder=\"Search Keyword\"\n              @input=\"setSearchKeyword\"\n              required\n            ></b-form-input>\n            <b-button\n              style=\"background-color: #1f3d73; border: none\"\n              @click=\"getSettingsList(settings.type)\"\n              >Search</b-button\n            >\n            <b-button @click=\"handleClearSearch\">Clear</b-button>\n          </div>\n          <b-table\n            id=\"settings-table\"\n            class=\"reportDetails-table\"\n            striped\n            hover\n            :items=\"settings && settings.records[settings.type]\"\n            :busy=\"settings && settings.loading\"\n            :fields=\"settings && settings.columns[settings.type]\"\n            show-empty\n            selectMode=\"single\"\n            selectable\n            @row-selected=\"mapSettings\"\n          >\n            <template #table-busy>\n              <div class=\"text-center my-2\" style=\"color: #1f3d73\">\n                <b-spinner\n                  class=\"align-middle\"\n                  style=\"margin-right: 10px\"\n                ></b-spinner>\n                <strong>Please Wait...</strong>\n              </div>\n            </template>\n            <template #empty>\n              <h5>No Records Found.</h5>\n            </template>\n          </b-table>\n          <!-- Table Pagination Starts -->\n          <div class=\"pagination\">\n            <b-pagination\n              v-model=\"settings.currentPage\"\n              :total-rows=\"settings.rows\"\n              :per-page=\"settings.perPage\"\n              @change=\"handleSettingsPagination\"\n              aria-controls=\"reportDetails-table\"\n            ></b-pagination>\n          </div>\n          <!-- Table Pagination Ends -->\n        </div>\n      </b-modal>\n      <!-- Modal Settings List Ends -->\n    </div>\n  </div>\n</template>\n<script>\nimport { findash } from \"../../config/pluginInit\";\nimport { UploadCOA, Focus, SSOI } from \"../../schema\";\nimport { formatBytes } from \"../../Utils/tools\";\nimport api, { uploadFile } from \"../../Utils/api\";\n\nconst { columns, uploadColumns } = UploadCOA;\n\nconst focusColumns = (Focus && Focus.columns) || [];\nconst ssoiColumns = (SSOI && SSOI.columns) || [];\n\nexport default {\n  name: \"Upload\",\n  data: () => ({\n    breadcrumb: [\n      {\n        text: \"CHART OF ACCOUNTS\",\n        href: \"#\",\n      },\n      {\n        text: \"UPLOAD COA\",\n        active: true,\n      },\n    ],\n    settings: {\n      showModal: false,\n      loading: false,\n      type: false,\n      coa_review_id: false,\n      list_api: {\n        focus: \"/focus-setting/find-many\",\n        ssoi: \"/ssoi-setting/find-many\",\n      },\n      map_api: {\n        focus: \"/focus-setting/map-coa\",\n        ssoi: \"/ssoi-setting/map-coa\",\n      },\n      unmap_api: {\n        focus: \"/focus-setting/unmap-coa\",\n        ssoi: \"/ssoi-setting/unmap-coa\",\n      },\n      records: {\n        focus: [],\n        ssoi: [],\n      },\n      columns: {\n        focus: (focusColumns || []).filter((_) => _.viewRecord),\n        ssoi: (ssoiColumns || []).filter((_) => _.viewRecord),\n      },\n      currentPage: 1,\n      rows: 0,\n      perPage: 10,\n      search_key: \"\",\n    },\n    loading: false,\n    showModal: false,\n    fields: (columns || []).filter((_) => _.viewRecord),\n    columns: (columns || []).filter((_) => _.editRecord),\n    records: [],\n    formType: false,\n    formId: false,\n    form: {},\n    currentPage: 1,\n    rows: 0,\n    perPage: 10,\n    role: false,\n    user: false\n  }),\n  mounted() {\n    const { user } = this.$store.getters[\"Setting/authUserState\"] || {};\n    this.user = user;\n    this.role = user && user.role;\n\n    findash.index();\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      this.loading = true;\n\n      const reqData = {\n        pagination: {\n          take: this.perPage,\n          page: this.currentPage,\n        },\n      };\n\n      api\n        .post(\"/coa-review/find-many\", reqData)\n        .then((res) => {\n          if (\n            res &&\n            res.data &&\n            res.data.data &&\n            res.data.data.coa_reviews &&\n            res.data.data.pagination\n          ) {\n            this.records = res.data.data.coa_reviews || [];\n            const { page, count } = res.data.data.pagination;\n            this.currentPage = page;\n            this.rows = count;\n          } else {\n            this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n          }\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    async getSettingsList(name) {\n      this.settings.loading = true;\n\n      const reqData = {\n        pagination: {\n          take: this.settings.perPage,\n          page: this.settings.currentPage,\n        },\n        search: this.settings.search_key,\n      };\n\n      if (\n        this.settings &&\n        this.settings.list_api &&\n        this.settings.list_api[name]\n      ) {\n        api\n          .post(this.settings.list_api[name], reqData)\n          .then((res) => {\n            if (\n              res &&\n              res.data &&\n              res.data.data &&\n              (res.data.data.focus_settings || res.data.data.ssoi_settings) &&\n              res.data.data.pagination\n            ) {\n              this.settings.records[name] =\n                res.data.data.focus_settings || res.data.data.ssoi_settings;\n              const { page, count } = res.data.data.pagination;\n              this.settings.currentPage = page;\n              this.settings.rows = count;\n            } else {\n              this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n            }\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n          })\n          .finally(() => {\n            this.settings.loading = false;\n          });\n      }\n    },\n    async handleSubmit() {\n      if (this.formType === \"Update\") {\n        api\n          .post(`/coa-review/update-many`, {\n            data: [\n              {\n                account_id: this.formId,\n                data: this.form,\n              },\n            ],\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Updated Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to update record.\");\n          });\n      } else if (this.formType === \"Upload\") {\n        const files = this.form && this.form.files && [this.form.files];\n        files.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            formattedSize: formatBytes(file.size),\n          })\n        );\n\n        const formData = new FormData();\n        formData.append(\"files\", files[0]);\n        formData.append(\"path\", `upload/staging/UPLOAD-COA-REVIEW/${this.user.id}`);\n\n        uploadFile(formData, 'UPLOAD-COA-REVIEW')\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Created Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to create record.\");\n          });\n      } else {\n        api\n          .post(`/coa-review/create`, {\n            data: this.form,\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Created Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to create record.\");\n          });\n      }\n    },\n    async onDelete(id) {\n      if (confirm(\"Do you really want to delete?\")) {\n        api\n          .post(`/coa-review/delete-many`, { data: { account_ids: [id] } })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Delete Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          });\n      }\n    },\n    async handleClone() {\n      api\n        .post(`/coa-review/clone-coa`, {})\n        .then((res) => {\n          this.makeToast(\"success\", \"Success\", \"Data Cloned Successfuly.\");\n          this.getList();\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to clone the records.\");\n        });\n    },\n    async mapSettings(row) {\n      const record = (row && row.length > 0 && row[0]) || false;\n      const url =\n        this.settings &&\n        this.settings.map_api &&\n        this.settings.map_api[this.settings.type];\n\n      const reqData =\n        this.settings.type === \"focus\"\n          ? { focus_id: record.id }\n          : this.settings.type === \"ssoi\"\n          ? { ssoi_id: record.id }\n          : false;\n      if (url && reqData && this.settings.coa_review_id && record) {\n        api\n          .patch(url, {\n            data: {\n              coa_review_id: this.settings.coa_review_id,\n              ...reqData,\n            },\n          })\n          .then((res) => {\n            this.resetModal();\n            this.makeToast(\"success\", \"Success\", \"Data Mapped Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          });\n      }\n    },\n    async unmapSettings(type, id) {\n      const url =\n        this.settings &&\n        this.settings.unmap_api &&\n        this.settings.unmap_api[type];\n      if (url && type && id) {\n        this.loading = true;\n        api\n          .patch(url, {\n            data: {\n              coa_review_id: id,\n            },\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Data Unmapped Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          })\n          .finally(() => {\n            this.loading = false;\n          });\n      }\n    },\n    async handleReview() {\n      api\n        .post(`/coa-review/mark-done`, { data: {} })\n        .then((res) => {\n          this.makeToast(\"success\", \"Success\", \"Review sent.\");\n          this.getList();\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n        });\n    },\n    onClickEdit(data) {\n      const editFormData = this.columns.reduce(\n        (a, el) => Object.assign({}, a, { [el.key]: data[el.key] }),\n        {}\n      );\n      this.form = editFormData;\n      this.formType = \"Update\";\n      this.formId = data.id;\n      this.showModal = true;\n    },\n    onClickUpload() {\n      this.columns = (uploadColumns || []).filter((_) => _.editRecord);\n      this.formType = \"Upload\";\n      this.showModal = true;\n    },\n    openSettingsModal(type, id) {\n      this.settings.type = type;\n      this.settings.coa_review_id = id;\n      this.settings.showModal = true;\n    },\n    resetModal() {\n      this.showModal = false;\n      this.formId = false;\n      this.formType = false;\n      this.form = {};\n      this.columns = (columns || []).filter((_) => _.editRecord);\n      this.settings = {\n        loading: false,\n        type: false,\n        coa_review_id: false,\n        list_api: {\n          focus: \"/focus-setting/find-many\",\n          ssoi: \"/ssoi-setting/find-many\",\n        },\n        map_api: {\n          focus: \"/focus-setting/map-coa\",\n          ssoi: \"/ssoi-setting/map-coa\",\n        },\n        unmap_api: {\n          focus: \"/focus-setting/unmap-coa\",\n          ssoi: \"/ssoi-setting/unmap-coa\",\n        },\n        records: {\n          focus: [],\n          ssoi: [],\n        },\n        columns: {\n          focus: (focusColumns || []).filter((_) => _.viewRecord),\n          ssoi: (ssoiColumns || []).filter((_) => _.viewRecord),\n        },\n        currentPage: 1,\n        rows: 0,\n        perPage: 10,\n        search_key: \"\",\n      };\n    },\n    makeToast(variant = null, title, body) {\n      this.$bvToast.toast(body || \"\", {\n        title: title || \"\",\n        variant: variant,\n        solid: true,\n      });\n    },\n    handleSettingsPagination(currentPage) {\n      this.settings.currentPage = currentPage;\n      this.getSettingsList(this.settings.type);\n    },\n    handlePagination(currentPage) {\n      this.currentPage = currentPage;\n      this.getList();\n    },\n    setSearchKeyword(val) {\n      this.settings.search_key = val;\n    },\n    handleClearSearch() {\n      this.settings.search_key = \"\";\n      this.getSettingsList(this.settings.type);\n    },\n  },\n};\n</script>\n<style scoped>\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n.header button:first-child,\n.header button:nth-child(2) {\n  margin-right: 15px;\n  background-color: #1f3d73;\n  border: none;\n}\n\n.header button:nth-child(3) {\n  background-color: #1f3d73;\n  margin-right: 15px;\n  border: none;\n}\n\n.header button:nth-child(4) {\n  background-color: #1f3d73;\n  border: none;\n}\n\n.edit-btn {\n  background-color: #1f3d73 !important;\n  margin-right: 15px;\n  border: none;\n}\n\n.del-btn {\n  background-color: #c61212 !important;\n  border: none;\n}\n\n.edit-btn i,\n.del-btn i {\n  margin: 0px !important;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n}\n.coa-review-success {\n  color: green;\n  font-weight: bold;\n  font-size: 22px;\n  margin-left: 8px;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n}\n\n.search input {\n  width: 24%;\n  margin-right: 15px;\n}\n\n.search button {\n  margin-right: 15px;\n}\n</style>"]}]}