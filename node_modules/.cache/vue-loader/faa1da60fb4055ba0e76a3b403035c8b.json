{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/layouts/Layout.vue?vue&type=template&id=2ab51da9&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/layouts/Layout.vue","mtime":1653396920000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}