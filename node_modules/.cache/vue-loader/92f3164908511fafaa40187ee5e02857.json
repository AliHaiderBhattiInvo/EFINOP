{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp1Form.vue?vue&type=template&id=0c0b4e32&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp1Form.vue","mtime":1652702162000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}