{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp1Form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignUp1Form.vue","mtime":1652702162000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sCmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgbWFyZ2luOiAwOwp9CgppbnB1dFt0eXBlPSJudW1iZXIiXSB7CiAgLW1vei1hcHBlYXJhbmNlOiAidGV4dGZpZWxkIjsKfQoKLmxvYWRpbmctYnRuIHsKICBiYWNrZ3JvdW5kOiB2YXIoLS1pcS1wcmltYXJ5KSAhaW1wb3J0YW50OwogIGJvcmRlci1jb2xvcjogdmFyKC0taXEtcHJpbWFyeSkgIWltcG9ydGFudDsKICBwYWRkaW5nOiA2cHggMTJweCA2cHggMTJweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["SignUp1Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SignUp1Form.vue","sourceRoot":"src/views/AuthPages/Default/Forms","sourcesContent":["<template>\n  <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit, invalid }\">\n    <form class=\"mt-4\" novalidate @submit.prevent=\"handleSubmit(onSubmit)\">\n      <ValidationProvider vid=\"mobile\" name=\"Mobile\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\"> \n          <div style=\"display:flex\">\n            <div class=\"col-md-2\" style=\"padding:0\">\n              <vue-country-code\n              style=\"height:45px\"\n              @onSelect=\"onSelect\"\n              defaultCountry='us'\n              :onlyCountries=\"['in', 'us']\">\n            </vue-country-code>\n           </div>\n           <div class=\"col-md-10\" style=\"padding:0\">\n               <input type=\"number\" v-model=\"formData.mobile_number\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"mobile\" placeholder=\"Mobile Number\">  \n                  <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div> \n           </div>\n          </div>\n        </div>\n      </ValidationProvider>\n      <ValidationProvider vid=\"password\" name=\"Password\" :rules=\"{ required: true, regex: /^[a-zA-Z0-9!@#$%^&*]{6,16}$/ }\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">  \n            <b-form-input type=\"password\" autocomplete=\"new-password\" v-model=\"formData.password\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"password\" placeholder=\"Password\">\n                 </b-form-input> \n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n        \n      </ValidationProvider>\n      <ValidationProvider vid=\"repass\" name=\"Repeat Password\" :rules=\"{ required: true, regex: /^[a-zA-Z0-9!@#$%^&*]{6,16}$/,confirmed:formData.password}\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">  \n            <input type=\"password\" v-model=\"formData.repassword\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"repassword\" placeholder=\"Repeat Password\" />\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n\n      <ValidationProvider vid=\"super_admin\" name=\"super_admin\" rules=\"required\">\n        <div class=\"form-group\"> \n          <div class=\"d-inline-block w-100\">\n            <div class=\"custom-control custom-checkbox d-inline-block mt-2 pt-1\">\n              <input type=\"checkbox\" v-model=\"formData.super_admin\" class=\"custom-control-input\" id=\"super_admin\">\n              <label class=\"custom-control-label\" for=\"super_admin\"> <a href=\"#\">Are you super admin to manage this account?</a></label>\n            </div>\n          </div>\n        </div>\n      </ValidationProvider>\n      \n\n      <div class=\"d-inline-block w-100\" style=\"display:flex !important;justify-content:center;margin-bottom:15px\">\n        <vue-recaptcha :sitekey=\"sitekey\" :loadRecaptchaScript=\"true\" @verify=\"validateCaptcha\"></vue-recaptcha>\n      </div>\n\n      <div class=\"d-inline-block w-100\" style=\"display:flex !important;justify-content:center;\">\n        <VueLoadingButton\n          class=\"btn btn-primary loading-btn\"\n          aria-label=\"Post message\"\n          @click.native=\"onSubmit\"\n          :disabled=\"invalid || !formData.super_admin || !recaptcha\"\n          :loading=\"isLoading\"\n          styled\n        >Send OTP</VueLoadingButton>\n      </div>\n      <div class=\"sign-info\" style=\"display: flex;justify-content: center;color: black;\">\n          <span class=\"dark-color d-inline-block line-height-2\">\n            Already Have Account ?\n              <router-link to=\"/dark/sign-in1\" class=\"iq-waves-effect pr-4\" v-if=\"$route.meta.dark\">\n                Sign in\n              </router-link>\n            <router-link to=\"/sign-in1\" class=\"iq-waves-effect pr-4\" v-else>\n                Sign in\n              </router-link>\n          </span>\n      </div>\n    </form>\n  </ValidationObserver>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport api from \"../../../../Utils/api\";\nimport { findash } from \"../../../../config/pluginInit\";\nimport Vue from \"vue\";\nimport VueCountryCode from \"vue-country-code-select\";\nimport VueLoadingButton from \"vue-loading-button\";\nimport { VueRecaptcha } from 'vue-recaptcha';\n\nVue.use(VueCountryCode);\n\nexport default {\n  name: \"SignUp1Form\",\n  props: [\"formType\"],\n  mounted() {\n    findash.index();\n  },\n  computed: {\n    ...mapGetters({\n      users: \"Setting/usersState\",\n    }),\n  },\n  components: {\n    VueLoadingButton,\n    VueRecaptcha\n  },\n  data: () => ({\n    formData: {\n      mobile_number: \"\",\n      country_code: \"\",\n      password: \"\",\n      repassword: \"\",\n      super_admin: true,\n    },\n    isLoading: false,\n    sitekey: '6LcslMceAAAAACcF4Yf1Mk2LEKvHiJAc0iyZ3p4t',\n    recaptcha: true\n  }),\n  methods: {\n    async onSelect({ name, iso2, dialCode }) {\n      this.formData.country_code = `+${dialCode}`;\n    },\n    async validateCaptcha (emit) {\n      this.recaptcha = emit ? true : false;\n    },\n    async onSubmit() {\n      var self = this;\n      this.isLoading = true;\n      let datas = { ...this.formData };\n      if (datas.repassword) {\n        delete datas.repassword;\n      }\n      api\n        .post(\"sent-otp\", { data: datas })\n        .then((res) => {\n          if (res.data && res.data.data) {\n            findash.showSnackbar(\"success\", res.data && res.data.message);\n            this.$store.dispatch(`Setting/addUserAction`, res.data.data);\n            this.$router.replace(`/auth/sign-up2`);\n          } else {\n            findash.showSnackbar(\"error\", \"User Data Not Found\");\n          }\n        })\n        .catch((error) => {\n          const Err = (error.response && error.response.data && error.response.data.error && error.response.data.error.message) || (error.response && error.response.data && error.response.data.message) || \"Unable to send the otp. Please try again later\";\n          findash.showSnackbar(\"error\", Err);\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style>\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type=\"number\"] {\n  -moz-appearance: \"textfield\";\n}\n\n.loading-btn {\n  background: var(--iq-primary) !important;\n  border-color: var(--iq-primary) !important;\n  padding: 6px 12px 6px 12px !important;\n}\n</style>\n"]}]}