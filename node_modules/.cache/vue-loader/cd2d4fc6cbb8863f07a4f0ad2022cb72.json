{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignIn2Form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/SignIn2Form.vue","mtime":1652906350000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9hZGluZy1idG4gewogIGJhY2tncm91bmQ6IHZhcigtLWlxLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgICBib3JkZXItY29sb3I6IHZhcigtLWlxLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgICBwYWRkaW5nOiA2cHggMTJweCA2cHggMTJweCAhaW1wb3J0YW50Owp9CgoucmVzZW5kLW90cC1zcGFuIHsKICAgIGNvbG9yOiAjMWUzZDczOwogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["SignIn2Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SignIn2Form.vue","sourceRoot":"src/views/AuthPages/Default/Forms","sourcesContent":["<template>\n  <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit, invalid }\">\n    <form class=\"mt-4\" novalidate @submit.prevent=\"handleSubmit(onSubmit)\">\n      <ValidationProvider vid=\"code\" name=\"Code\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <label for=\"code\">OTP</label>\n          <input type=\"text\" v-model=\"formData.code\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"code\" placeholder=\"Mobile OTP\">\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n      <div class=\"d-inline-block w-100\" style=\"display:flex !important;justify-content:center;align-items:center\">\n        <VueLoadingButton\n          class=\"btn btn-primary loading-btn\"\n          aria-label=\"Post message\"\n          @click.native=\"onSubmit\"\n          :disabled=\"invalid\"\n          :loading=\"isLoading\"\n          styled\n        >Submit</VueLoadingButton>\n        </div>\n    </form>\n  </ValidationObserver>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport api, { setAuthToken } from '../../../../Utils/api'\nimport { findash } from '../../../../config/pluginInit'\nimport Vue from 'vue'\nimport VueLoadingButton from \"vue-loading-button\";\nimport vueAwesomeCountdown from 'vue-awesome-countdown';\n\nVue.use(vueAwesomeCountdown, 'vac')\n\nexport default {\n  name: 'SignIn2Form',\n  props: ['formType'],\n  mounted () {\n    findash.index()\n  },\n  computed: {\n    ...mapGetters({\n      users: 'Setting/usersState'\n    })\n  },\n  components: {\n    VueLoadingButton\n  },\n  data: () => ({\n    isLoading: false,\n    formData: {\n      code: '',\n      session: ''\n    }\n  }),\n  methods: {\n    async onSubmit () {\n      this.isLoading = true;\n      api.post('response-mfa-challenge', { data: Object.assign({}, this.formData, { session: localStorage.getItem('session-key') || '' }) }).then(res => {\n        const apiData = res && res.data && res.data.data || {}\n        this.$store.dispatch('Setting/authUserAction', {\n          auth: true,\n          user: (apiData && apiData.user_data && apiData.user_data) || {}\n        })\n        localStorage.setItem('access_token', apiData && apiData.tokens && apiData.tokens.access_token || false)\n        localStorage.setItem('refresh_token', apiData && apiData.tokens && apiData.tokens.refresh_token || false)\n        setAuthToken(`Bearer ${apiData && apiData.tokens && apiData.tokens.access_token}`);\n        this.$router.push({ name: 'app.intro' })\n      }).catch(error => {\n        const Err = (error.response && error.response.data && error.response.data.error && error.response.data.error.message) || (error.response && error.response.data && error.response.data.message) || 'Invalid OTP Code.';\n        findash.showSnackbar('error', Err)\n      }).finally(() => {\n        this.isLoading = false\n        localStorage.removeItem('session-key')\n      })\n    }\n  }\n}\n</script>\n<style>\n.loading-btn {\n  background: var(--iq-primary) !important;\n    border-color: var(--iq-primary) !important;\n    padding: 6px 12px 6px 12px !important;\n}\n\n.resend-otp-span {\n    color: #1e3d73;\n    text-decoration: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n</style>\n"]}]}