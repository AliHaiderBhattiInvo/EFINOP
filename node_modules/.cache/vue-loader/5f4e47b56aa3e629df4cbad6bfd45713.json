{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue?vue&type=template&id=140927ed&scoped=true&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue","mtime":1653396920000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}