{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js!/Users/mp-alih-me-397/Downloads/code/src/Utils/tools.js","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/Utils/tools.js","mtime":1652638352000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWZsb2F0IjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL21wLWFsaWgtbWUtMzk3L0Rvd25sb2Fkcy9jb2RlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwoKLyoqCiAqIAogKiBAcGFyYW0ge0FycmF5fSBjb2x1bW5zIAogKiBAcGFyYW0ge29iamVjdH0gcmVjb3JkIAogKiBAcGFyYW0ge29iamVjdH0gbWV0YURhdGEgCiAqIEBwYXJhbSB7b2JqZWN0fSBsb2NhdGlvblN0YXRlIAogKiBAcmV0dXJucyAKICovCmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQ29sdW1ucyhjb2x1bW5zKSB7CiAgdmFyIHJlY29yZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgdmFyIG1ldGFEYXRhID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTsKICB2YXIgbG9jYXRpb25TdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAzID8gYXJndW1lbnRzWzNdIDogdW5kZWZpbmVkOwogIHZhciBzY2hlbWEgPSB0eXBlb2YgY29sdW1ucyA9PT0gJ2Z1bmN0aW9uJyA/IGNvbHVtbnMocmVjb3JkLCBtZXRhRGF0YSkgOiBjb2x1bW5zOwogIHZhciBzZWN0aW9uID0gc2NoZW1hICYmIF90eXBlb2Yoc2NoZW1hKSA9PT0gJ29iamVjdCcgJiYgc2NoZW1hLnNlY3Rpb24gfHwgZmFsc2U7CiAgdmFyIHNlY3Rpb25Db2x1bW5zID0gc2VjdGlvbiAmJiBsb2NhdGlvblN0YXRlICYmIGxvY2F0aW9uU3RhdGUuc2NoZW1hSWQgJiYgc2VjdGlvbi5maW5kKGZ1bmN0aW9uIChfKSB7CiAgICByZXR1cm4gXy5zY2hlbWFJZCA9PT0gbG9jYXRpb25TdGF0ZS5zY2hlbWFJZDsKICB9KSB8fCBmYWxzZTsKICByZXR1cm4gc2VjdGlvbkNvbHVtbnMgJiYgc2VjdGlvbkNvbHVtbnMuY29sdW1ucyB8fCBzY2hlbWEgJiYgc2NoZW1hLmNvbHVtbnMgfHwgc2NoZW1hOwp9Ci8qKgoqIAoqIEBwYXJhbSB7aW50ZWdlcn0gYnl0ZXMgCiogQHBhcmFtIHtpbnRlZ2VyfSBkZWNpbWFscyAKKiBAcmV0dXJucyAKKi8KCmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRCeXRlcyhieXRlcykgewogIHZhciBkZWNpbWFscyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMjsKICBpZiAoYnl0ZXMgPT09IDApIHJldHVybiAiMCBCeXRlcyI7CiAgdmFyIGsgPSAxMDI0OwogIHZhciBkbSA9IGRlY2ltYWxzIDwgMCA/IDAgOiBkZWNpbWFsczsKICB2YXIgc2l6ZXMgPSBbIkJ5dGVzIiwgIktCIiwgIk1CIiwgIkdCIiwgIlRCIiwgIlBCIiwgIkVCIiwgIlpCIiwgIllCIl07CiAgdmFyIGkgPSBNYXRoLmZsb29yKE1hdGgubG9nKGJ5dGVzKSAvIE1hdGgubG9nKGspKTsKICByZXR1cm4gcGFyc2VGbG9hdCgoYnl0ZXMgLyBNYXRoLnBvdyhrLCBpKSkudG9GaXhlZChkbSkpICsgIiAiICsgc2l6ZXNbaV07Cn0="},{"version":3,"sources":["/Users/mp-alih-me-397/Downloads/code/src/Utils/tools.js"],"names":["resolveColumns","columns","record","metaData","locationState","schema","section","sectionColumns","schemaId","find","_","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"mappings":";;;;;AAGA;;;;;;;;AAQA,OAAO,SAASA,cAAT,CAAwBC,OAAxB,EAA4E;AAAA,MAA3CC,MAA2C,uEAAlC,EAAkC;AAAA,MAA9BC,QAA8B,uEAAnB,EAAmB;AAAA,MAAfC,aAAe;AACjF,MAAMC,MAAM,GAAG,OAAOJ,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACC,MAAD,EAASC,QAAT,CAAvC,GAA4DF,OAA3E;AACA,MAAMK,OAAO,GAAGD,MAAM,IAAI,QAAOA,MAAP,MAAkB,QAA5B,IAAwCA,MAAM,CAACC,OAA/C,IAA0D,KAA1E;AACA,MAAMC,cAAc,GAAGD,OAAO,IAAIF,aAAX,IAA4BA,aAAa,CAACI,QAA1C,IAAsDF,OAAO,CAACG,IAAR,CAAa,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACF,QAAF,KAAeJ,aAAa,CAACI,QAAjC;AAAA,GAAd,CAAtD,IAAkH,KAAzI;AAEA,SAAQD,cAAc,IAAIA,cAAc,CAACN,OAAlC,IAA+CI,MAAM,IAAIA,MAAM,CAACJ,OAAhE,IAA4EI,MAAnF;AACD;AAGA;;;;;;;AAMC,OAAO,SAASM,WAAT,CAAqBC,KAArB,EAA0C;AAAA,MAAdC,QAAc,uEAAH,CAAG;AAC/C,MAAID,KAAK,KAAK,CAAd,EAAiB,OAAO,SAAP;AACjB,MAAME,CAAC,GAAG,IAAV;AACA,MAAMC,EAAE,GAAGF,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBA,QAA9B;AACA,MAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AAEA,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASR,KAAT,IAAkBM,IAAI,CAACE,GAAL,CAASN,CAAT,CAA7B,CAAV;AACA,SAAOO,UAAU,CAAC,CAACT,KAAK,GAAGM,IAAI,CAACI,GAAL,CAASR,CAAT,EAAYG,CAAZ,CAAT,EAAyBM,OAAzB,CAAiCR,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAACC,CAAD,CAArE;AACD","sourcesContent":["\n\n\n/**\n * \n * @param {Array} columns \n * @param {object} record \n * @param {object} metaData \n * @param {object} locationState \n * @returns \n */\nexport function resolveColumns(columns, record = {}, metaData = {}, locationState) {\n  const schema = typeof columns === 'function' ? columns(record, metaData) : columns;\n  const section = schema && typeof schema === 'object' && schema.section || false;\n  const sectionColumns = section && locationState && locationState.schemaId && section.find(_ => _.schemaId === locationState.schemaId) || false;\n\n  return (sectionColumns && sectionColumns.columns) || (schema && schema.columns) || schema;\n}\n\n\n /**\n * \n * @param {integer} bytes \n * @param {integer} decimals \n * @returns \n */\n  export function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\"\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n  \n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n  }"]}]}