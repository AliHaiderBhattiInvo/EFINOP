{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js!/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/ResetPasswordForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/Forms/ResetPasswordForm.vue","mtime":1652638352000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbXAtYWxpaC1tZS0zOTcvRG93bmxvYWRzL2NvZGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbXAtYWxpaC1tZS0zOTcvRG93bmxvYWRzL2NvZGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vLi4vLi4vVXRpbHMvYXBpJzsKaW1wb3J0IHsgZmluZGFzaCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbmZpZy9wbHVnaW5Jbml0JzsKaW1wb3J0IFZ1ZUxvYWRpbmdCdXR0b24gZnJvbSAidnVlLWxvYWRpbmctYnV0dG9uIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSZXNldFBhc3N3b3JkRm9ybScsCiAgcHJvcHM6IFsnZm9ybVR5cGUnXSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgZmluZGFzaC5pbmRleCgpOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoewogICAgdXNlcnM6ICdTZXR0aW5nL3VzZXJzU3RhdGUnCiAgfSkpLAogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUxvYWRpbmdCdXR0b246IFZ1ZUxvYWRpbmdCdXR0b24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBmb3JtRGF0YTogewogICAgICAgIG90cDogJycsCiAgICAgICAgbmV3X3Bhc3N3b3JkOiAnJywKICAgICAgICBjb25maXJtX3Bhc3N3b3JkOiAnJwogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMkZm9ybURhdGEsIG5ld19wYXNzd29yZCwgY29uZmlybV9wYXNzd29yZCwgb3RwLCB1c2Vyc1N0YXRlOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXMkZm9ybURhdGEgPSBfdGhpcy5mb3JtRGF0YSwgbmV3X3Bhc3N3b3JkID0gX3RoaXMkZm9ybURhdGEubmV3X3Bhc3N3b3JkLCBjb25maXJtX3Bhc3N3b3JkID0gX3RoaXMkZm9ybURhdGEuY29uZmlybV9wYXNzd29yZCwgb3RwID0gX3RoaXMkZm9ybURhdGEub3RwOwoKICAgICAgICAgICAgICAgIGlmICghKG5ld19wYXNzd29yZC50b1N0cmluZygpICE9PSBjb25maXJtX3Bhc3N3b3JkLnRvU3RyaW5nKCkpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGZpbmRhc2guc2hvd1NuYWNrYmFyKCdlcnJvcicsICdUaGUgUGFzc3dvcmQgYW5kIENvbmZpcm0gUGFzc3dvcmQgc2hvdWxkIGJlIHNhbWUuJyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHVzZXJzU3RhdGUgPSBfdGhpcy4kc3RvcmUuZ2V0dGVyc1snU2V0dGluZy91c2Vyc1N0YXRlJ10gJiYgX3RoaXMuJHN0b3JlLmdldHRlcnNbJ1NldHRpbmcvdXNlcnNTdGF0ZSddLmxlbmd0aCA+IDAgJiYgX3RoaXMuJHN0b3JlLmdldHRlcnNbJ1NldHRpbmcvdXNlcnNTdGF0ZSddWzFdIHx8IHt9OwogICAgICAgICAgICAgICAgYXBpLnBvc3QoJ3Jlc2V0LXBhc3N3b3JkJywgewogICAgICAgICAgICAgICAgICBkYXRhOiBPYmplY3QuYXNzaWduKHt9LCB7CiAgICAgICAgICAgICAgICAgICAgb3RwOiBvdHAsCiAgICAgICAgICAgICAgICAgICAgbmV3X3Bhc3N3b3JkOiBuZXdfcGFzc3dvcmQsCiAgICAgICAgICAgICAgICAgICAgaWQ6IHVzZXJzU3RhdGUgJiYgdXNlcnNTdGF0ZS51c2VyX2lkIHx8ICcnCiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgZmluZGFzaC5zaG93U25hY2tiYXIoJ3N1Y2Nlc3MnLCByZXMuZGF0YSAmJiByZXMuZGF0YS5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucmVwbGFjZSgiL3NpZ24taW4xIik7CiAgICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgdmFyIEVyciA9IGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yLm1lc3NhZ2UgfHwgZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UgfHwgJ0VtYWlsIFZlcmlmaWNhdGlvbiBGYWlsZWQuJzsKICAgICAgICAgICAgICAgICAgZmluZGFzaC5zaG93U25hY2tiYXIoJ2Vycm9yJywgRXJyKTsKICAgICAgICAgICAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ResetPasswordForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,GAAA,MAAA,uBAAA;AACA,SAAA,OAAA,QAAA,+BAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,OAHA,qBAGA;AACA,IAAA,OAAA,CAAA,KAAA;AACA,GALA;AAMA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,KAAA,EAAA;AADA,GAAA,CADA,CANA;AAWA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAXA;AAcA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA,EAFA;AAGA,QAAA,gBAAA,EAAA;AAHA;AAFA,KAAA;AAAA,GAdA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AADA,iCAEA,KAAA,CAAA,QAFA,EAEA,YAFA,kBAEA,YAFA,EAEA,gBAFA,kBAEA,gBAFA,EAEA,GAFA,kBAEA,GAFA;;AAAA,sBAGA,YAAA,CAAA,QAAA,OAAA,gBAAA,CAAA,QAAA,EAHA;AAAA;AAAA;AAAA;;AAIA,gBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,gBAAA,OAAA,CAAA,YAAA,CAAA,OAAA,EAAA,mDAAA;AALA,iDAMA,KANA;;AAAA;AASA,gBAAA,UATA,GASA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,KAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,EAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,EAAA,CAAA,CAAA,IAAA,EATA;AAUA,gBAAA,GAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,kBAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AAAA,oBAAA,GAAA,EAAA,GAAA;AAAA,oBAAA,YAAA,EAAA,YAAA;AAAA,oBAAA,EAAA,EAAA,UAAA,IAAA,UAAA,CAAA,OAAA,IAAA;AAAA,mBAAA;AAAA,iBAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,YAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,OAAA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,OAAA;AACA,iBAHA,WAGA,UAAA,KAAA,EAAA;AACA,sBAAA,GAAA,GAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IAAA,4BAAA;AACA,kBAAA,OAAA,CAAA,YAAA,CAAA,OAAA,EAAA,GAAA;AACA,iBANA,aAMA,YAAA;AACA,kBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,iBARA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AApBA;AAtBA,CAAA","sourcesContent":["<template>\n  <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit }\">\n    <form class=\"mt-4\" novalidate @submit.prevent=\"handleSubmit(onSubmit)\">\n        <ValidationProvider vid=\"otp\" name=\"OTP\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <label for=\"otp\">OTP</label>\n          <input type=\"text\" v-model=\"formData.otp\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"otp\" placeholder=\"Email OTP\">\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n    <ValidationProvider vid=\"new_password\" name=\"Password\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <label for=\"new_password\">Password</label>\n          <input\n            type=\"password\"\n            :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n            id=\"new_password\"\n            v-model=\"formData.new_password\"\n            placeholder=\"Password\"\n            required\n          />\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n          <ValidationProvider vid=\"confirm_password\" name=\"Confirm Password\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <label for=\"confirm_password\">Password</label>\n          <input\n            type=\"password\"\n            autocomplete=\"new-password\"\n            :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n            id=\"confirm_password\"\n            v-model=\"formData.confirm_password\"\n            placeholder=\"Confirm Password\"\n            required\n          />\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n      <div style=\"display:flex !important;justify-content:center;margin-top:15px;\">\n        <VueLoadingButton\n          class=\"btn btn-primary loading-btn\"\n          aria-label=\"Post message\"\n          @click.native=\"onSubmit\"\n          :loading=\"isLoading\"\n          styled\n        >Submit Password</VueLoadingButton>\n      </div>\n      <div class=\"sign-info\" style=\"position:relative;left:-15px\">\n          <span class=\"dark-color d-inline-block line-height-2\">\n            Already Have Account ?\n              <router-link to=\"/dark/sign-in1\" class=\"iq-waves-effect pr-4\" v-if=\"$route.meta.dark\">\n                Sign in\n              </router-link>\n            <router-link to=\"/sign-in1\" class=\"iq-waves-effect pr-4\" v-else>\n                Sign in\n              </router-link>\n          </span>\n      </div>\n    </form>\n  </ValidationObserver>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport api from '../../../../Utils/api'\nimport { findash } from '../../../../config/pluginInit'\nimport VueLoadingButton from \"vue-loading-button\";\n\nexport default {\n  name: 'ResetPasswordForm',\n  props: ['formType'],\n  mounted () {\n    findash.index()\n  },\n  computed: {\n    ...mapGetters({\n      users: 'Setting/usersState'\n    })\n  },\n  components: {\n    VueLoadingButton\n  },\n  data: () => ({\n    isLoading: false,\n    formData: {\n      otp: '',\n      new_password: '',\n      confirm_password: ''\n    }\n  }),\n  methods: {\n    async onSubmit () {\n      this.isLoading = true;\n      const { new_password, confirm_password, otp } = this.formData;\n      if(new_password.toString() !== confirm_password.toString()) {\n          this.isLoading = false;\n          findash.showSnackbar('error', 'The Password and Confirm Password should be same.');\n          return false;\n      }\n\n      const usersState = (this.$store.getters['Setting/usersState'] && this.$store.getters['Setting/usersState'].length > 0 && this.$store.getters['Setting/usersState'][1]) || {}\n      api.post('reset-password', { data: Object.assign({}, { otp, new_password, id: (usersState && usersState.user_id) || '' }) }).then(res => {\n        findash.showSnackbar('success', res.data && res.data.message)\n        this.$router.replace(`/sign-in1`)\n      }).catch(error => {\n        const Err = (error.response && error.response.data && error.response.data.error && error.response.data.error.message) || (error.response && error.response.data && error.response.data.message) || 'Email Verification Failed.'\n        findash.showSnackbar('error', Err)\n      }).finally(() => {\n        this.isLoading = false;\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/AuthPages/Default/Forms"}]}