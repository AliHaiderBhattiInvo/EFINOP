{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js!/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/RecoverPassword1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/AuthPages/Default/RecoverPassword1.vue","mtime":1652638352000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbXAtYWxpaC1tZS0zOTcvRG93bmxvYWRzL2NvZGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vLi4vVXRpbHMvYXBpJzsKaW1wb3J0IHsgZmluZGFzaCB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9wbHVnaW5Jbml0JzsKaW1wb3J0IFZ1ZUxvYWRpbmdCdXR0b24gZnJvbSAidnVlLWxvYWRpbmctYnV0dG9uIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSZWNvdmVyUGFzc3dvcmQxJywKICBwcm9wczogWydmb3JtVHlwZSddLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBmaW5kYXNoLmluZGV4KCk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBWdWVMb2FkaW5nQnV0dG9uOiBWdWVMb2FkaW5nQnV0dG9uCiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyh7CiAgICBzdGF0ZVVzZXJzOiAnU2V0dGluZy91c2Vyc1N0YXRlJwogIH0pKSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgZm9ybURhdGE6IHsKICAgICAgICBlbWFpbDogJycKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgYXBpLnBvc3QoJ2ZvcmdldC1wYXNzd29yZCcsIHsKICAgICAgICBkYXRhOiB0aGlzLmZvcm1EYXRhCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YSAmJiByZXMuZGF0YS5kYXRhKSB7CiAgICAgICAgICBmaW5kYXNoLnNob3dTbmFja2Jhcignc3VjY2VzcycsIHJlcy5kYXRhICYmIHJlcy5kYXRhLm1lc3NhZ2UpOwoKICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgiU2V0dGluZy9hZGRVc2VyQWN0aW9uIiwgewogICAgICAgICAgICB1c2VyX2lkOiByZXMuZGF0YS5kYXRhICYmIHJlcy5kYXRhLmRhdGEuaWQKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzLiRyb3V0ZXIucmVwbGFjZSgiL3Jlc2V0LXBhc3N3b3JkIik7CiAgICAgICAgfQogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB2YXIgRXJyID0gZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yIHx8IGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5tZXNzYWdlIHx8ICdUaGUgVXNlcm5hbWUvUGFzc3dvcmQgaXMgSW5jb3JyZWN0Lic7CiAgICAgICAgdmFyIHVzZXJfaWQgPSBlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEudXNlcl9pZDsKCiAgICAgICAgaWYgKEVyciA9PSAnWW91ciBlbWFpbCBpcyBub3Qgc3VibWl0dGVkIFBsZWFzZSBjb21wbGV0ZSB5b3VyIHJlZ2lzdHJhdGlvbi4nICYmIHVzZXJfaWQpIHsKICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgiU2V0dGluZy9hZGRVc2VyQWN0aW9uIiwgewogICAgICAgICAgICB1c2VyX2lkOiB1c2VyX2lkCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpcy4kcm91dGVyLnJlcGxhY2UoIi9hdXRoL3NpZ24tdXAzIik7CiAgICAgICAgfSBlbHNlIGlmICgoRXJyID09ICdZb3VyIGVtYWlsIGlzIG5vdCB2ZXJpZmllZC4nIHx8IEVyciA9PSAnWW91ciBlbWFpbCBpcyBub3QgdmVyaWZpZWQgUGxlYXNlIHZlcmlmeSB5b3VyIGVtYWlsLicpICYmIHVzZXJfaWQpIHsKICAgICAgICAgIGFwaS5wb3N0KCdyZXNlbmQtZW1haWwtb3RwJywgewogICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcl9pZC50b1N0cmluZygpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBmaW5kYXNoLnNob3dTbmFja2Jhcigic3VjY2VzcyIsIHJlcy5kYXRhICYmIHJlcy5kYXRhLm1lc3NhZ2UpOwoKICAgICAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCJTZXR0aW5nL2FkZFVzZXJBY3Rpb24iLCB7CiAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcl9pZAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucmVwbGFjZSgiL2F1dGgvc2lnbi11cDQiKTsKICAgICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICBmaW5kYXNoLnNob3dTbmFja2JhcignZXJyb3InLCAiVW5hYmxlIHRvIHNlbmQgcmVzZW5kIG90cCIpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmIChFcnIgPT0gJ1lvdXIgcGhvbmUgbnVtYmVyIGlzIG5vdCB2ZXJpZmllZC4nICYmIHVzZXJfaWQpIHsKICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgiU2V0dGluZy9hZGRVc2VyQWN0aW9uIiwgewogICAgICAgICAgICB1c2VyX2lkOiB1c2VyX2lkCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpcy4kcm91dGVyLnJlcGxhY2UoIi9hdXRoL3NpZ24tdXAyIik7CiAgICAgICAgfQoKICAgICAgICBmaW5kYXNoLnNob3dTbmFja2JhcignZXJyb3InLCBFcnIpOwogICAgICB9KVsiZmluYWxseSJdKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RecoverPassword1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1 class=\"mb-0\">Reset Password</h1>\n    <p>Enter your email address and we'll send you an email with instructions to reset your password.</p>\n    <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit }\">\n    <form class=\"mt-4\" novalidate @submit.prevent=\"handleSubmit(onSubmit)\">\n      <ValidationProvider vid=\"email\" name=\"Email\" rules=\"required\" v-slot=\"{ errors }\">\n        <div class=\"form-group\">\n          <input type=\"email\" v-model=\"formData.email\" :class=\"'form-control mb-0' +(errors.length > 0 ? ' is-invalid' : '')\"\n                 id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email Address\">\n          <div class=\"invalid-feedback\">\n            <span>{{ errors[0] }}</span>\n          </div>\n        </div>\n      </ValidationProvider>\n      <div class=\"d-inline-block w-100\" style=\"display:flex !important;justify-content:center\">\n        <VueLoadingButton\n          class=\"btn btn-primary float-right loading-btn\"\n          aria-label=\"Post message\"\n          @click.native=\"onSubmit\"\n          :loading=\"isLoading\"\n          styled\n        >Reset Password</VueLoadingButton>\n      </div>\n    </form>\n    </ValidationObserver>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nimport api from '../../../Utils/api'\nimport { findash } from '../../../config/pluginInit'\nimport VueLoadingButton from \"vue-loading-button\";\n\nexport default {\n  name: 'RecoverPassword1',\n  props: ['formType'],\n  mounted () {\n    findash.index()\n  },\n  components: {\n    VueLoadingButton\n  },\n  computed: {\n    ...mapGetters({\n      stateUsers: 'Setting/usersState'\n    })\n  },\n  data: () => ({\n    isLoading: false,\n    formData: {\n      email: ''\n    }\n  }),\n  methods: {\n    onSubmit () {\n      this.isLoading = true;\n      api.post('forget-password', { data: this.formData }).then(res => {\n        if (res.data && res.data.data) {\n          findash.showSnackbar('success', res.data && res.data.message)\n          this.$store.dispatch(`Setting/addUserAction`, { user_id: res.data.data && res.data.data.id })\n          this.$router.replace(`/reset-password`)\n        }\n      }).catch(error => {\n        const Err = (error.response && error.response.data && error.response.data.error) || (error.response && error.response.data && error.response.data.message) || 'The Username/Password is Incorrect.';\n        const user_id = (error.response && error.response.data && error.response.data.user_id) \n        if((Err == 'Your email is not submitted Please complete your registration.') && user_id){\n          this.$store.dispatch(`Setting/addUserAction`, { user_id })\n          this.$router.replace(`/auth/sign-up3`)\n        } else if((Err == 'Your email is not verified.' || Err == 'Your email is not verified Please verify your email.') && user_id) {\n            api.post('resend-email-otp', { data: { user_id: user_id.toString() }}).then(res => {\n              findash.showSnackbar(\"success\", res.data && res.data.message);\n              this.$store.dispatch(`Setting/addUserAction`, { user_id })\n              this.$router.replace(`/auth/sign-up4`)\n            }).catch(error => {\n              findash.showSnackbar('error', \"Unable to send resend otp\")\n            })\n        } else if(Err == 'Your phone number is not verified.' && user_id) {\n          this.$store.dispatch(`Setting/addUserAction`, { user_id })\n          this.$router.replace(`/auth/sign-up2`)\n        }\n        findash.showSnackbar('error', Err)\n      }).finally(() => {\n        this.isLoading = false\n      })\n    }\n  }\n}\n</script>\n<style>\n.loading-btn {\n  background: var(--iq-primary) !important;\n    border-color: var(--iq-primary) !important;\n    padding: 6px 12px 6px 12px !important;\n}\n</style>"],"sourceRoot":"src/views/AuthPages/Default"}]}