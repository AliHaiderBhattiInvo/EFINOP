{"remainingRequest":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js!/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mp-alih-me-397/Downloads/code/src/views/UploadCOA/index.vue","mtime":1653396920000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mp-alih-me-397/Downloads/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div>\n      <!-- Page Header Starts -->\n      <div class=\"header\">\n        <div>\n          <b-breadcrumb :items=\"breadcrumb\" style=\"margin: 0px\" />\n        </div>\n        <div>\n          <div>\n            <b-button v-b-modal.reportDetails-form>Create COA</b-button>\n            <b-button @click=\"onClickUpload\">Upload COA</b-button>\n            <b-button @click=\"handleClone\">Clone COA</b-button>\n            <b-button v-if=\"role === 'MIDDLE'\" @click=\"handleReview\"\n              >Send for Review</b-button\n            >\n            <b-button v-if=\"role === 'ADMIN'\" @click=\"handleReview\"\n              >Push to Final</b-button\n            >\n          </div>\n        </div>\n      </div>\n      <!-- Page Header Ends -->\n      <!-- Table List Starts -->\n      <b-table\n        id=\"reportDetails-table\"\n        class=\"reportDetails-table\"\n        striped\n        hover\n        :items=\"records\"\n        :busy=\"loading\"\n        :fields=\"fields\"\n        show-empty\n      >\n        <template #cell(focus_setting)=\"data\">\n          <div\n            v-if=\"\n              data &&\n              data.item &&\n              data.item.focus_setting &&\n              data.item.focus_setting.focus_id\n            \"\n          >\n            <div style=\"display: flex; align-items: center\">\n              {{\n                (data &&\n                  data.item &&\n                  data.item.focus_setting &&\n                  data.item.focus_setting.focus_id) ||\n                \"\"\n              }}\n              <i class=\"las la-check-circle coa-review-success\"></i>\n            </div>\n            <b-badge\n              class=\"border border-danger text-danger mr-1\"\n              variant=\"none\"\n              @click=\"unmapSettings('focus', data && data.item && data.item.id)\"\n            >\n              <i class=\"las la-times\" style=\"cursor: pointer\"> Remove </i>\n            </b-badge>\n          </div>\n          <div v-if=\"data && data.item && !data.item.focus_setting\">\n            <b-badge\n              @click=\"\n                openSettingsModal('focus', data && data.item && data.item.id)\n              \"\n              class=\"border border-primary text-primary mr-1\"\n              variant=\"none\"\n              ><i class=\"las la-plus\" style=\"font-size: 14px; cursor: pointer\">\n                Select Focus ID\n              </i></b-badge\n            >\n          </div>\n        </template>\n        <template #cell(ssoi_setting)=\"data\">\n          <div\n            v-if=\"\n              data &&\n              data.item &&\n              data.item.ssoi_setting &&\n              data.item.ssoi_setting.ssoi_id\n            \"\n          >\n            <div style=\"display: flex; align-items: center\">\n              {{\n                (data &&\n                  data.item &&\n                  data.item.ssoi_setting &&\n                  data.item.ssoi_setting.ssoi_id) ||\n                \"\"\n              }}\n              <i class=\"las la-check-circle coa-review-success\"></i>\n            </div>\n            <b-badge\n              class=\"border border-danger text-danger mr-1\"\n              variant=\"none\"\n              @click=\"unmapSettings('ssoi', data && data.item && data.item.id)\"\n            >\n              <i class=\"las la-times\" style=\"cursor: pointer\"> Remove </i>\n            </b-badge>\n          </div>\n          <div v-if=\"data && data.item && !data.item.ssoi_setting\">\n            <b-badge\n              @click=\"\n                openSettingsModal('ssoi', data && data.item && data.item.id)\n              \"\n              class=\"border border-primary text-primary mr-1\"\n              variant=\"none\"\n              ><i class=\"las la-plus\" style=\"font-size: 14px; cursor: pointer\">\n                Select SSOI ID\n              </i></b-badge\n            >\n          </div>\n        </template>\n        <template #cell(allowable)=\"data\">\n          <div>\n            {{\n              data && data.item && data.item.allowable\n                ? \"Allowable\"\n                : data && data.item && data.item.allowable === false\n                ? \"Non Allowable\"\n                : \"\"\n            }}\n          </div>\n        </template>\n        <template #cell(action)=\"data\">\n          <b-button\n            class=\"edit-btn\"\n            @click=\"onClickEdit((data && data.item) || {})\"\n          >\n            <i class=\"ri-pencil-line\" />\n          </b-button>\n          <b-button\n            class=\"del-btn\"\n            @click=\"onDelete(data && data.item && data.item.id)\"\n          >\n            <i class=\"ri-delete-bin-7-line\" />\n          </b-button>\n        </template>\n        <template #table-busy>\n          <div class=\"text-center my-2\" style=\"color: #1f3d73\">\n            <b-spinner\n              class=\"align-middle\"\n              style=\"margin-right: 10px\"\n            ></b-spinner>\n            <strong>Please Wait...</strong>\n          </div>\n        </template>\n        <template #empty>\n          <h5>No Records Found.</h5>\n        </template>\n      </b-table>\n      <!-- Table List Ends -->\n      <!-- Table Pagination Starts -->\n      <div class=\"pagination\">\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"rows\"\n          :per-page=\"perPage\"\n          @change=\"handlePagination\"\n          aria-controls=\"reportDetails-table\"\n        ></b-pagination>\n      </div>\n      <!-- Table Pagination Ends -->\n      <!-- Modal Form Starts -->\n      <b-modal\n        id=\"reportDetails-form\"\n        ref=\"modal\"\n        :title=\"formType ? `${formType} COA` : 'Create COA'\"\n        v-model=\"showModal\"\n        @hidden=\"resetModal\"\n        @ok=\"handleSubmit\"\n      >\n        <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n          <div v-for=\"item in columns\" :key=\"item.id\">\n            <b-form-group\n              v-if=\"item.type === 'text'\"\n              :label=\"item.label\"\n              :label-for=\"item.key\"\n            >\n              <b-form-input\n                :name=\"item.key\"\n                :id=\"item.key\"\n                v-model=\"form[item.key]\"\n                :required=\"item.required\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-checkbox\n              v-if=\"item.type === 'checkbox'\"\n              :id=\"item.key\"\n              v-model=\"form[item.key]\"\n              :name=\"item.key\"\n            >\n              {{ item.label }}\n            </b-form-checkbox>\n            <b-form-file\n              v-if=\"item.type === 'file'\"\n              v-model=\"form[item.key]\"\n              placeholder=\"Choose a file or drop it here...\"\n              drop-placeholder=\"Drop file here...\"\n            ></b-form-file>\n          </div>\n        </form>\n        <template #modal-ok>Submit</template>\n      </b-modal>\n      <!-- Modal Form Ends -->\n      <!-- Modal Settings List Starts -->\n      <b-modal\n        id=\"settings-list-modal\"\n        ref=\"settings-modal\"\n        size=\"xl\"\n        title=\"Please select the row\"\n        v-model=\"settings.showModal\"\n        @show=\"getSettingsList(settings.type)\"\n        @hidden=\"resetModal\"\n        :ok-disabled=\"true\"\n      >\n        <div>\n          <div class=\"search\">\n            <b-form-input\n              name=\"search_key\"\n              id=\"search_key\"\n              v-model=\"settings.search_key\"\n              placeholder=\"Search Keyword\"\n              @input=\"setSearchKeyword\"\n              required\n            ></b-form-input>\n            <b-button\n              style=\"background-color: #1f3d73; border: none\"\n              @click=\"getSettingsList(settings.type)\"\n              >Search</b-button\n            >\n            <b-button @click=\"handleClearSearch\">Clear</b-button>\n          </div>\n          <b-table\n            id=\"settings-table\"\n            class=\"reportDetails-table\"\n            striped\n            hover\n            :items=\"settings && settings.records[settings.type]\"\n            :busy=\"settings && settings.loading\"\n            :fields=\"settings && settings.columns[settings.type]\"\n            show-empty\n            selectMode=\"single\"\n            selectable\n            @row-selected=\"mapSettings\"\n          >\n            <template #table-busy>\n              <div class=\"text-center my-2\" style=\"color: #1f3d73\">\n                <b-spinner\n                  class=\"align-middle\"\n                  style=\"margin-right: 10px\"\n                ></b-spinner>\n                <strong>Please Wait...</strong>\n              </div>\n            </template>\n            <template #empty>\n              <h5>No Records Found.</h5>\n            </template>\n          </b-table>\n          <!-- Table Pagination Starts -->\n          <div class=\"pagination\">\n            <b-pagination\n              v-model=\"settings.currentPage\"\n              :total-rows=\"settings.rows\"\n              :per-page=\"settings.perPage\"\n              @change=\"handleSettingsPagination\"\n              aria-controls=\"reportDetails-table\"\n            ></b-pagination>\n          </div>\n          <!-- Table Pagination Ends -->\n        </div>\n      </b-modal>\n      <!-- Modal Settings List Ends -->\n    </div>\n  </div>\n</template>\n<script>\nimport { findash } from \"../../config/pluginInit\";\nimport { UploadCOA, Focus, SSOI } from \"../../schema\";\nimport { formatBytes } from \"../../Utils/tools\";\nimport api, { uploadFile } from \"../../Utils/api\";\n\nconst { columns, uploadColumns } = UploadCOA;\n\nconst focusColumns = (Focus && Focus.columns) || [];\nconst ssoiColumns = (SSOI && SSOI.columns) || [];\n\nexport default {\n  name: \"Upload\",\n  data: () => ({\n    breadcrumb: [\n      {\n        text: \"CHART OF ACCOUNTS\",\n        href: \"#\",\n      },\n      {\n        text: \"UPLOAD COA\",\n        active: true,\n      },\n    ],\n    settings: {\n      showModal: false,\n      loading: false,\n      type: false,\n      coa_review_id: false,\n      list_api: {\n        focus: \"/focus-setting/find-many\",\n        ssoi: \"/ssoi-setting/find-many\",\n      },\n      map_api: {\n        focus: \"/focus-setting/map-coa\",\n        ssoi: \"/ssoi-setting/map-coa\",\n      },\n      unmap_api: {\n        focus: \"/focus-setting/unmap-coa\",\n        ssoi: \"/ssoi-setting/unmap-coa\",\n      },\n      records: {\n        focus: [],\n        ssoi: [],\n      },\n      columns: {\n        focus: (focusColumns || []).filter((_) => _.viewRecord),\n        ssoi: (ssoiColumns || []).filter((_) => _.viewRecord),\n      },\n      currentPage: 1,\n      rows: 0,\n      perPage: 10,\n      search_key: \"\",\n    },\n    loading: false,\n    showModal: false,\n    fields: (columns || []).filter((_) => _.viewRecord),\n    columns: (columns || []).filter((_) => _.editRecord),\n    records: [],\n    formType: false,\n    formId: false,\n    form: {},\n    currentPage: 1,\n    rows: 0,\n    perPage: 10,\n    role: false,\n    user: false\n  }),\n  mounted() {\n    const { user } = this.$store.getters[\"Setting/authUserState\"] || {};\n    this.user = user;\n    this.role = user && user.role;\n\n    findash.index();\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      this.loading = true;\n\n      const reqData = {\n        pagination: {\n          take: this.perPage,\n          page: this.currentPage,\n        },\n      };\n\n      api\n        .post(\"/coa-review/find-many\", reqData)\n        .then((res) => {\n          if (\n            res &&\n            res.data &&\n            res.data.data &&\n            res.data.data.coa_reviews &&\n            res.data.data.pagination\n          ) {\n            this.records = res.data.data.coa_reviews || [];\n            const { page, count } = res.data.data.pagination;\n            this.currentPage = page;\n            this.rows = count;\n          } else {\n            this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n          }\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    async getSettingsList(name) {\n      this.settings.loading = true;\n\n      const reqData = {\n        pagination: {\n          take: this.settings.perPage,\n          page: this.settings.currentPage,\n        },\n        search: this.settings.search_key,\n      };\n\n      if (\n        this.settings &&\n        this.settings.list_api &&\n        this.settings.list_api[name]\n      ) {\n        api\n          .post(this.settings.list_api[name], reqData)\n          .then((res) => {\n            if (\n              res &&\n              res.data &&\n              res.data.data &&\n              (res.data.data.focus_settings || res.data.data.ssoi_settings) &&\n              res.data.data.pagination\n            ) {\n              this.settings.records[name] =\n                res.data.data.focus_settings || res.data.data.ssoi_settings;\n              const { page, count } = res.data.data.pagination;\n              this.settings.currentPage = page;\n              this.settings.rows = count;\n            } else {\n              this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n            }\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to fetch api records\");\n          })\n          .finally(() => {\n            this.settings.loading = false;\n          });\n      }\n    },\n    async handleSubmit() {\n      if (this.formType === \"Update\") {\n        api\n          .post(`/coa-review/update-many`, {\n            data: [\n              {\n                account_id: this.formId,\n                data: this.form,\n              },\n            ],\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Updated Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to update record.\");\n          });\n      } else if (this.formType === \"Upload\") {\n        const files = this.form && this.form.files && [this.form.files];\n        files.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            formattedSize: formatBytes(file.size),\n          })\n        );\n\n        const formData = new FormData();\n        formData.append(\"files\", files[0]);\n        formData.append(\"path\", `upload/staging/UPLOAD-COA-REVIEW/${this.user.id}`);\n\n        uploadFile(formData, 'UPLOAD-COA-REVIEW')\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Created Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to create record.\");\n          });\n      } else {\n        api\n          .post(`/coa-review/create`, {\n            data: this.form,\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Record Created Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to create record.\");\n          });\n      }\n    },\n    async onDelete(id) {\n      if (confirm(\"Do you really want to delete?\")) {\n        api\n          .post(`/coa-review/delete-many`, { data: { account_ids: [id] } })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Delete Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          });\n      }\n    },\n    async handleClone() {\n      api\n        .post(`/coa-review/clone-coa`, {})\n        .then((res) => {\n          this.makeToast(\"success\", \"Success\", \"Data Cloned Successfuly.\");\n          this.getList();\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to clone the records.\");\n        });\n    },\n    async mapSettings(row) {\n      const record = (row && row.length > 0 && row[0]) || false;\n      const url =\n        this.settings &&\n        this.settings.map_api &&\n        this.settings.map_api[this.settings.type];\n\n      const reqData =\n        this.settings.type === \"focus\"\n          ? { focus_id: record.id }\n          : this.settings.type === \"ssoi\"\n          ? { ssoi_id: record.id }\n          : false;\n      if (url && reqData && this.settings.coa_review_id && record) {\n        api\n          .patch(url, {\n            data: {\n              coa_review_id: this.settings.coa_review_id,\n              ...reqData,\n            },\n          })\n          .then((res) => {\n            this.resetModal();\n            this.makeToast(\"success\", \"Success\", \"Data Mapped Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          });\n      }\n    },\n    async unmapSettings(type, id) {\n      const url =\n        this.settings &&\n        this.settings.unmap_api &&\n        this.settings.unmap_api[type];\n      if (url && type && id) {\n        this.loading = true;\n        api\n          .patch(url, {\n            data: {\n              coa_review_id: id,\n            },\n          })\n          .then((res) => {\n            this.makeToast(\"success\", \"Success\", \"Data Unmapped Successfuly.\");\n            this.getList();\n          })\n          .catch((Err) => {\n            this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n          })\n          .finally(() => {\n            this.loading = false;\n          });\n      }\n    },\n    async handleReview() {\n      api\n        .post(`/coa-review/mark-done`, { data: {} })\n        .then((res) => {\n          this.makeToast(\"success\", \"Success\", \"Review sent.\");\n          this.getList();\n        })\n        .catch((Err) => {\n          this.makeToast(\"danger\", \"Error\", \"Unable to delete record.\");\n        });\n    },\n    onClickEdit(data) {\n      const editFormData = this.columns.reduce(\n        (a, el) => Object.assign({}, a, { [el.key]: data[el.key] }),\n        {}\n      );\n      this.form = editFormData;\n      this.formType = \"Update\";\n      this.formId = data.id;\n      this.showModal = true;\n    },\n    onClickUpload() {\n      this.columns = (uploadColumns || []).filter((_) => _.editRecord);\n      this.formType = \"Upload\";\n      this.showModal = true;\n    },\n    openSettingsModal(type, id) {\n      this.settings.type = type;\n      this.settings.coa_review_id = id;\n      this.settings.showModal = true;\n    },\n    resetModal() {\n      this.showModal = false;\n      this.formId = false;\n      this.formType = false;\n      this.form = {};\n      this.columns = (columns || []).filter((_) => _.editRecord);\n      this.settings = {\n        loading: false,\n        type: false,\n        coa_review_id: false,\n        list_api: {\n          focus: \"/focus-setting/find-many\",\n          ssoi: \"/ssoi-setting/find-many\",\n        },\n        map_api: {\n          focus: \"/focus-setting/map-coa\",\n          ssoi: \"/ssoi-setting/map-coa\",\n        },\n        unmap_api: {\n          focus: \"/focus-setting/unmap-coa\",\n          ssoi: \"/ssoi-setting/unmap-coa\",\n        },\n        records: {\n          focus: [],\n          ssoi: [],\n        },\n        columns: {\n          focus: (focusColumns || []).filter((_) => _.viewRecord),\n          ssoi: (ssoiColumns || []).filter((_) => _.viewRecord),\n        },\n        currentPage: 1,\n        rows: 0,\n        perPage: 10,\n        search_key: \"\",\n      };\n    },\n    makeToast(variant = null, title, body) {\n      this.$bvToast.toast(body || \"\", {\n        title: title || \"\",\n        variant: variant,\n        solid: true,\n      });\n    },\n    handleSettingsPagination(currentPage) {\n      this.settings.currentPage = currentPage;\n      this.getSettingsList(this.settings.type);\n    },\n    handlePagination(currentPage) {\n      this.currentPage = currentPage;\n      this.getList();\n    },\n    setSearchKeyword(val) {\n      this.settings.search_key = val;\n    },\n    handleClearSearch() {\n      this.settings.search_key = \"\";\n      this.getSettingsList(this.settings.type);\n    },\n  },\n};\n</script>\n<style scoped>\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n.header button:first-child,\n.header button:nth-child(2) {\n  margin-right: 15px;\n  background-color: #1f3d73;\n  border: none;\n}\n\n.header button:nth-child(3) {\n  background-color: #1f3d73;\n  margin-right: 15px;\n  border: none;\n}\n\n.header button:nth-child(4) {\n  background-color: #1f3d73;\n  border: none;\n}\n\n.edit-btn {\n  background-color: #1f3d73 !important;\n  margin-right: 15px;\n  border: none;\n}\n\n.del-btn {\n  background-color: #c61212 !important;\n  border: none;\n}\n\n.edit-btn i,\n.del-btn i {\n  margin: 0px !important;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n}\n.coa-review-success {\n  color: green;\n  font-weight: bold;\n  font-size: 22px;\n  margin-left: 8px;\n}\n.search {\n  display: flex;\n  flex-direction: row;\n}\n\n.search input {\n  width: 24%;\n  margin-right: 15px;\n}\n\n.search button {\n  margin-right: 15px;\n}\n</style>"],"sourceRoot":"src/views/UploadCOA"}]}